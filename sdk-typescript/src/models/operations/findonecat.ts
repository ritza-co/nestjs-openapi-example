/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FindOneCatRequest = {
  id: string;
};

/** @internal */
export const FindOneCatRequest$inboundSchema: z.ZodType<
  FindOneCatRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type FindOneCatRequest$Outbound = {
  id: string;
};

/** @internal */
export const FindOneCatRequest$outboundSchema: z.ZodType<
  FindOneCatRequest$Outbound,
  z.ZodTypeDef,
  FindOneCatRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneCatRequest$ {
  /** @deprecated use `FindOneCatRequest$inboundSchema` instead. */
  export const inboundSchema = FindOneCatRequest$inboundSchema;
  /** @deprecated use `FindOneCatRequest$outboundSchema` instead. */
  export const outboundSchema = FindOneCatRequest$outboundSchema;
  /** @deprecated use `FindOneCatRequest$Outbound` instead. */
  export type Outbound = FindOneCatRequest$Outbound;
}

export function findOneCatRequestToJSON(
  findOneCatRequest: FindOneCatRequest,
): string {
  return JSON.stringify(
    FindOneCatRequest$outboundSchema.parse(findOneCatRequest),
  );
}

export function findOneCatRequestFromJSON(
  jsonString: string,
): SafeParseResult<FindOneCatRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneCatRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneCatRequest' from JSON`,
  );
}
